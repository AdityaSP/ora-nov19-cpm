
$ cat helloworld.rb
file '/tmp/f1.txt' do
  content 'Hello world'
  action :create
end

$ chef-apply helloworld.rb
Recipe: (chef-apply cookbook)::(chef-apply recipe)
  * file[/tmp/f1.txt] action create
    - create new file /tmp/f1.txt
    - update content in file /tmp/f1.txt from none to 64ec88
    --- /tmp/f1.txt     2018-11-21 06:50:50.843300171 +0000
    +++ /tmp/.chef-f120181121-3054-194pjkx.txt  2018-11-21 06:50:50.839300113 +0000
    @@ -1 +1,2 @@
    +Hello world

################### Creating a cookbook
vagrant@33m~/nov21
$ mkdir cookbooks

vagrant@33m~/nov21
$ ls
cookbooks  helloworld.rb

vagrant@33m~/nov21
$ cd cookbooks

vagrant@33m~/nov21/cookbooks
$ chef generate cookbook apache2
########### Make a recipe entry in default.rb
vagrant@33m~/nov21/cookbooks/apache2
$ cat recipes/default.rb
file '/tmp/f1.txt' do
  content 'Hello world'
  action :create
end

service 'apache2' do
  action :start
end

######### Run the cookbook
vagrant@33m~/nov21
$ sudo chef-client --local-mode --runlist 'recipe[apache2]'
[2018-11-21T07:17:21+00:00] WARN: No config file found or specified on command line, using command line options.
Starting Chef Client, version 12.16.42
resolving cookbooks for run list: ["apache2"]
Synchronizing Cookbooks:
  - apache2 (0.1.0)
Installing Cookbook Gems:
Compiling Cookbooks...
Converging 2 resources
Recipe: apache2::default
  * file[/tmp/f1.txt] action create (up to date)
  * service[apache2] action start (up to date)

Running handlers:
Running handlers complete
Chef Client finished, 0/2 resources updated in 02 seconds

########### Multiple files in a cookbook

vagrant@33m~/nov21/cookbooks/apache2/recipes
$ cat default.rb
package 'apache2' do
  action :install
end
cookbook_file '/etc/apache2/ports.conf' do
  source 'ports.conf'
  action :create
end
service 'apache2' do
  action :restart
end

vagrant@33m~/nov21/cookbooks/apache2/recipes
$ cat stop.rb

service 'apache2' do
  action :stop
end

$ sudo chef-client --local-mode --runlist 'recipe[apache2::default]'


$ sudo chef-client --local-mode --runlist 'recipe[apache2::stop]'


#### Work with chef-server
1. vagrant up of chef-server
2. from workstation - copy and paste knife.rb and admin.pem from https://github.com/AdityaSP/ora-nov19-cpm/chef
vagrant@33m~/nov21/.chef
$ ls -ltra
total 16
drwxrwxr-x 5 vagrant vagrant 4096 Nov 21 09:06 ..
-rw-rw-r-- 1 vagrant vagrant  425 Nov 21 09:08 knife.rb
-rw-rw-r-- 1 vagrant vagrant 1675 Nov 21 09:08 admin.pem
drwxrwxr-x 2 vagrant vagrant 4096 Nov 21 09:08 .

vagrant@33m~/nov21/.chef


vagrant@33m~/nov21
$ knife ssl fetch
WARNING: Certificates from chef-server.test will be fetched and placed in your trusted_cert
directory (/home/vagrant/nov21/.chef/trusted_certs).

Knife has no means to verify these are the correct certificates. You should
verify the authenticity of these certificates after downloading.

Adding certificate for chef-server_test in /home/vagrant/nov21/.chef/trusted_certs/chef-server_test.crt

vagrant@33m~/nov21
$ knife ssl check
Connecting to host chef-server.test:443
Successfully verified certificates from `chef-server.test'

vagrant@33m~/nov21/cookbooks
$ knife cookbook upload apache2
Uploading apache2        [0.1.0]
Uploaded 1 cookbook.

vagrant@33m~/nov21/cookbooks
$ knife node list


vagrant@33m~/nov21/cookbooks
$ knife bootstrap 10.1.1.34 --ssh-user vagrant --sudo --node-name node1-ubuntu

vagrant@33m~/nov21/cookbooks
$ knife node list
node1-ubuntu


#### SET RUN LIST ###########
vagrant@33m~/nov21/cookbooks
$ knife node show node1-ubuntu
Node Name:   node1-ubuntu
Environment: _default
FQDN:        node1-ubuntu
IP:          10.0.2.15
Run List:
Roles:
Recipes:
Platform:    ubuntu 14.04
Tags:

vagrant@33m~/nov21/cookbooks
$ knife node run_list set node1-ubuntu 'recipe[apache2]'                        node1-ubuntu:
  run_list: recipe[apache2]

vagrant@33m~/nov21/cookbooks
$ knife node show node1-ubuntu
Node Name:   node1-ubuntu
Environment: _default
FQDN:        node1-ubuntu
IP:          10.0.2.15
Run List:    recipe[apache2]
Roles:
Recipes:
Platform:    ubuntu 14.04
Tags:

vagrant@33m~/nov21/cookbooks
$

########### Trigger a chef-client run
vagrant@33m~/nov21/cookbooks
$ knife ssh 10.1.1.34 'sudo chef-client' --ssh-user vagrant --manual-list


#### WORKING WITH ATTRIBUTES ###############
## Accessing Ohai Attributes
vagrant@33m~/nov21/cookbooks
$ #chef generate cookbook attr

vagrant@33m~/nov21/cookbooks
$ cat attr/recipes/default.rb

# String interpolation "asdlfjd #{var_name}"
log "some log message #{node['kernel']['name']}"
log "some log message #{node['kernel']['os']}"

vagrant@33m~/nov21/cookbooks
$ #sudo chef-client --local-mode --runlist 'recipe[attr]'

vagrant@33m~/nov21/cookbooks/attr
$ mkdir attributes

vagrant@33m~/nov21/cookbooks/attr
$ touch attributes/default.rb

vagrant@33m~/nov21/cookbooks/attr
$ vi attributes/default.rb

vagrant@33m~/nov21/cookbooks/attr
$ cat attributes/default.rb
default['apache_port']=8181



### Templates

vagrant@33m~/nov21/cookbooks
$ cat attr/attributes/default.rb
#default['apache_port']=8181
normal['apache_port']=8181

vagrant@33m~/nov21/cookbooks
$ cat attr/templates/some.cnf.erb
port_num=<%= @node['apache_port'] %>

vagrant@33m~/nov21/cookbooks
$ cat attr/recipes/default.rb

node.default['apache_port']=9191

# String interpolation "asdlfjd #{var_name}"
log "some log message #{node['kernel']['name']}"
log "some log message #{node['kernel']['os']}"
log "I want set apache port as #{node['apache_port']}"

template '/tmp/some.cnf' do
  source 'some.cnf.erb'
end

vagrant@33m~/nov21/cookbooks
$ sudo chef-client --local-mode --runlist 'recipe[attr]'


############ Templates in apache2 cookbook #############
vagrant@33m~/nov21/cookbooks/apache2
$ #cp files/ports.conf templates/ports.conf.erb                                 
vagrant@33m~/nov21/cookbooks/apache2
$ grep Listen templates/ports.conf.erb
Listen <%= @node['apache_port'] %>
        Listen 443
        Listen 443

vagrant@33m~/nov21/cookbooks/apache2
$ #mkdir attributes

vagrant@33m~/nov21/cookbooks/apache2
$ cat attributes/default.rb
default['apache_port']=9191

vagrant@33m~/nov21/cookbooks/apache2
$ cat recipes/default.rb
package 'apache2' do
  action :install
end
#cookbook_file '/etc/apache2/ports.conf' do
#  source 'ports.conf'
#  action :create
#end
template '/etc/apache2/ports.conf' do
  source 'ports.conf.erb'
end
service 'apache2' do
  action :restart
end

vagrant@33m~/nov21/cookbooks/apache2
$ grep 0.2.0 metadata.rb
version '0.2.0'

vagrant@33m~/nov21/cookbooks/apache2
$ #knife cookbook upload apache2

vagrant@33m~/nov21/cookbooks/apache2
$ #knife ssh 10.1.1.34 "sudo chef-client" --ssh-user vagrant --manual-list      


########### ROLES

vagrant@33m~/nov21
$ #mkdir roles

vagrant@33m~/nov21
$ cat roles/webserver.json
{
 "name": "webserver",
 "json_class": "Chef::Role",
 "chef_type": "role",
 "run_list" : [ "recipe[apache2]" ]
}


vagrant@33m~/nov21
$ knife role from file webserver.json
Updated Role webserver

vagrant@33m~/nov21
$ knife role list
webserver

vagrant@33m~/nov21
$ knife node run_list set node1-ubuntu 'role[webserver]'                        node1-ubuntu:
  run_list: role[webserver]

vagrant@33m~/nov21
$ knife node show node1-ubuntu
Node Name:   node1-ubuntu
Environment: _default
FQDN:        node1-ubuntu
IP:          10.0.2.15
Run List:    role[webserver]
Roles:
Recipes:     apache2, apache2::default
Platform:    ubuntu 14.04
Tags:


##### Role with variables

vagrant@33m~/nov21
$ cat roles/webserver.json
{
 "name": "webserver",
 "json_class": "Chef::Role",
 "chef_type": "role",
 "run_list" : [ "recipe[apache2]" ],
 "default_attributes": {
    "apache_port" : 9999
  }
}


vagrant@33m~/nov21
$ #knife ssh 10.1.1.34 "sudo chef-client" --ssh-user vagrant --manual-list      


########## Environment
vagrant@33m~/nov21/environments
$ cat dev.json
{
 "name": "dev",
 "json_class": "Chef::Environment",
 "chef_type": "environment",
 "override_attributes": {
    "apache_port" : 9595
  }
}


vagrant@33m~/nov21/environments
$ cat prod.json
{
 "name": "prod",
 "json_class": "Chef::Environment",
 "chef_type": "environment",
 "override_attributes": {
    "apache_port" : 9898
  }
}

vagrant@33m~/nov21/environments
$ knife environment from file dev.json
Updated Environment dev

vagrant@33m~/nov21/environments
$ knife environment from file prod.json
Updated Environment prod

vagrant@33m~/nov21/environments
$ knife ssh 10.1.1.34 "sudo chef-client -E dev" --ssh-user vagrant --manual-list


########### User creation ##############
openssl passwd -1 'welcome'

vagrant@33m~/nov21
$ #chef generate cookbook users                                                 
vagrant@33m~/nov21
$ cd cookbooks/

vagrant@33m~/nov21/cookbooks
$ #chef generate cookbook users

vagrant@33m~/nov21/cookbooks
$ cat users/recipes/
cat: users/recipes/: Is a directory

vagrant@33m~/nov21/cookbooks
$ cat users/recipes/default.rb

user 'user99' do
  home '/home/user99'
  shell '/bin/bash'
  gid 900
  password '$1$dpbJZrOb$2l7JgeYPOhtc6ZqygjplQ1'
end

directory '/home/user99' do
  owner 'user99'
  group 'vagrant'
  mode '0755'
  action :create
end

vagrant@33m~/nov21/cookbooks
$ cd ..

vagrant@33m~/nov21
$ cat roles/webserver.json
{
 "name": "webserver",
 "json_class": "Chef::Role",
 "chef_type": "role",
 "run_list" : [ "recipe[apache2]", "recipe[users]" ],
 "default_attributes": {
    "apache_port" : 9999
  }
}

vagrant@33m~/nov21
$ knife role from file roles/webserver.json
Updated Role webserver

vagrant@33m~/nov21
$ #knife ssh 10.1.1.34 "sudo chef-client -E prod" --ssh-user vagrant --manual-list

################# Data bags ############
vagrant@33m~/nov21
$ #mkdir data_bags

vagrant@33m~/nov21
$ cd data_bags/

vagrant@33m~/nov21/data_bags
$ mkdir logins

vagrant@33m~/nov21/data_bags
$ cat logins/user99.json
{
  "id": "user99",
  "home": "/home/user99",
  "shell": "/bin/bash"
}

vagrant@33m~/nov21/data_bags

vagrant@33m~/nov21/data_bags
$ knife data_bag create logins

vagrant@33m~/nov21/data_bags/logins
$ knife data_bag from file logins user99.json
Updated data_bag_item[logins::user99]

vagrant@33m~/nov21/data_bags/logins
$ knife data_bag list
logins

vagrant@33m~/nov21/data_bags/logins
$ knife data_bag show logins
user97
user98
user99

vagrant@33m~/nov21/data_bags/logins
$ knife data_bag show logins user97
WARNING: Unencrypted data bag detected, ignoring any provided secret options.
home:  /home/user97
id:    user97
shell: /bin/bash

vagrant@33m~/nov21/data_bags/logins
$
######### SEARCHING 
vagrant@33m~/nov21/data_bags/logins
$ knife search node "*:*"

vagrant@33m~/nov21/data_bags/logins
$ knife search node "*:*" --long

vagrant@33m~/nov21/data_bags/logins
$ knife search node "*role*:*webserver*"

vagrant@33m~/nov21/data_bags/logins
$ knife search logins "*home*:*user99*"

vagrant@33m~/nov21/data_bags/logins
$ knife search logins '*:*'

### Using a databag in recipe

vagrant@33m~/nov21/cookbooks
$ cat users/recipes/default.rb
logins = search('logins', '*:*')

logins.each do |login|
  user login['id'] do
    home login['home']
    shell login['shell']
    gid 900
    password '$1$dpbJZrOb$2l7JgeYPOhtc6ZqygjplQ1'
  end

  directory login['home'] do
    owner login['id']
    group 'vagrant'
    mode '0755'
    action :create
  end
end

vagrant@33m~/nov21/cookbooks
$

vagrant@33m~/nov21/cookbooks
$ knife cookbook upload users
Uploading users          [0.1.0]
Uploaded 1 cookbook.

vagrant@33m~/nov21/cookbooks
$ #knife ssh 10.1.1.34 "sudo chef-client -E prod" --ssh-user vagrant --manual-list


### Encrypted Data bag items
##### ENCRYPTED DATABAGS

vagrant@33m~/nov21/data_bags
$ mkdir sensitive

vagrant@33m~/nov21/data_bags
$ knife data_bag create sensitive
Created data_bag[sensitive]

vagrant@33m~/nov21/data_bags

vagrant@33m~/nov21/data_bags
$ openssl rand -base64 512 | tr -d '\r\n' > secret_key

vagrant@33m~/nov21/data_bags
$ cat secret_key
JZHl+ROf3M4+MJL0lp0kyHg66KTLInmQVhRZUXrcyeucadpAMLDrBXKjoiBHqsiwGpfSpiKcOCtvyCIp6KT/nUaKPfyPusjWVYtiQDdlX47D79ixdjFZHA2A5j6wBuOhyKbjWTnqZM/aMbLSB1QEq5rLkPzORSgqf0ORZtBQzveWhglVbMH27OT3xjIfsoOOoWN5twjobPOcii+r7dGFTMBx+u++ey2ZeWhbPkwLHH9ZhNWGFtJ+UsrLNvh8sSUQJI9O6SdrzW5D447oZKr23VhQqX/TCaHaDbqWeVB/4r3K7/cZCkUxQ1cT08WWbnga8PMbGhX1bnEvq7AAEtw6HILUCNviQTcbc7omOGIL8mhYx8RABTOk0FoLI98HfwQlLxdnoS2+IEvLkf54+lOHjuOOwO3HYjNUcPiboR6piC6UtJTUrqJSfcUSBbXwfneNSw7VlQOedxW9kVXn6HYOOuGaLiw35wKcA1xNaRSRcE6Qrw+aea0yJ4RgM+sNF+2YBRvQttLm7Akm1BW/TCp2OAJjV7zpETEfi9bLL31Ey7M/xbvzIW1cOxAbiVq9kSBLQHdbzRLZDsl5Vt0aGhoIZlvRfwBO7UDCKcF1rINCjvDP2sMO6TaTfIQU2PAp4p1Ts7Pud9or7Xj2rT17OyLkkVU1Rtw3rmZ0hSSsi+w3zGs=
vagrant@33m~/nov21/data_bags
$ cat sensitive/passwords.json
{
   "id": "passwords",
   "mysqlpwd": "root"
}

vagrant@33m~/nov21/data_bags
$ knife data_bag list
logins
sensitive



vagrant@33m~/nov21/data_bags
$ knife data_bag from file sensitive sensitive/passwords.json --secret-file secret_key
Updated data_bag_item[sensitive::passwords]

vagrant@33m~/nov21/data_bags
$ knife data_bag show sensitive passwords
WARNING: Encrypted data bag detected, but no secret provided for decoding. Displaying encrypted data.
id:       passwords
mysqlpwd:
  cipher:         aes-256-cbc
  encrypted_data: P5Y+YOtJJ+NaquqcX8C7BlUV/9DjvB+6H4wKGrbBcWo=

  iv:             HVtqOZOfQI88deZ7PwEDPA==

  version:        1

vagrant@33m~/nov21/data_bags
$ knife data_bag show sensitive passwords --secret-file secret_key
Encrypted data bag detected, decrypting with provided secret.
id:       passwords
mysqlpwd: root


############# USE THE SECRET PASSWORD IN RECIPES

root@node1-ubuntu:/etc/chef# scp vagrant@10.1.1.32:/home/vagrant/nov21/data_bags/secret_key .
vagrant@10.1.1.32's password:
secret_key                                    100%  684     0.7KB/s   00:00
root@node1-ubuntu:/etc/chef# ls
client.pem  encrypted_data_bag_secret  mysecret     secret_key
client.rb   first-boot.json            secret_file  trusted_certs
root@node1-ubuntu:/etc/chef#


STEP2 : 
Add the below lines to users/recipes/defualt.rb

secret = Chef::EncryptedDataBagItem.load_secret("/etc/chef/secret_key")
passwords = Chef::EncryptedDataBagItem.load("sensistive", "passwords", secret)
log "decrypted password is #{passwords['mysqlpwd']}"


STEP3 : 
upload the cookbook
vagrant@33m~/nov21/cookbooks/users
$ knife cookbook upload users

STEP4:
Run the cookbook.
vagrant@33m~/nov21/cookbooks/users
$ knife ssh 10.1.1.34 "sudo chef-client -E prod" --ssh-user vagrant --manual-list




