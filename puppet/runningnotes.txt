
https://puppet.com/docs/puppet/5.3/type.html
Resource and type as File
https://puppet.com/docs/puppet/5.3/type.html#file

- First file ( create a manifest file)
`
vagrant@nodep1:~/nov19$ ls
helloworld.pp
vagrant@nodep1:~/nov19$ cat helloworld.pp
file { '/tmp/helloworld.txt':
  ensure => present
}
`

### Run local puppet run
vagrant@nodep1:~/nov19$ puppet apply helloworld.pp
Warning: Could not retrieve fact fqdn
Notice: Compiled catalog for nodep1 in environment production in 0.11 seconds
Notice: /Stage[main]/Main/File[/tmp/helloworld.txt]/ensure: created
Notice: Finished catalog run in 0.07 seconds
vagrant@nodep1:~/nov19$ ls /tmp/helloworld.txt


### Idempotence
vagrant@nodep1:~/nov19$ puppet apply helloworld.pp
Warning: Could not retrieve fact fqdn
Notice: Compiled catalog for nodep1 in environment production in 0.08 seconds
Notice: Finished catalog run in 0.07 seconds
vagrant@nodep1:~/nov19$ cat helloworld.pp

vagrant@nodep1:~/nov19$ vi helloworld.pp
vagrant@nodep1:~/nov19$ cat helloworld.pp
file { '/tmp/helloworld.txt':
  ensure => present,
  content => 'username=scott'
}

vagrant@nodep1:~/nov19$ puppet apply helloworld.pp
Warning: Could not retrieve fact fqdn
Notice: Compiled catalog for nodep1 in environment production in 0.09 seconds
Notice: /Stage[main]/Main/File[/tmp/helloworld.txt]/content: content changed '{md5}d41d8cd98f00b204e9800998ecf8427e' to '{md5}d73d8d27a41b7a89ade4a14714a4ae69'
Notice: Finished catalog run in 0.11 seconds
vagrant@nodep1:~/nov19$ cat /tmp/helloworld.txt
username=scottvagrant@nodep1:~/nov19$


### CONVERGENCE AND IDEMPOTENCE


### install apache2
$ sudo su
$ apt-get update

root@nodep1:/home/vagrant/nov19# cat install_apache2.pp
package {'apache2':
  ensure => present
}
root@nodep1:/home/vagrant/nov19#

### Create a module

root@nodep1:/home/vagrant/nov19# puppet module generate apache2
Error: Could not generate directory "apache2", you must specify a dash-separated username and module name.
Error: Try 'puppet help module generate' for usage
root@nodep1:/home/vagrant/nov19# puppet module generate sp-apache2
Notice: Generating module at /home/vagrant/nov19/sp-apache2
sp-apache2
sp-apache2/Modulefile
sp-apache2/README
sp-apache2/manifests
sp-apache2/manifests/init.pp
sp-apache2/spec
sp-apache2/spec/spec_helper.rb
sp-apache2/tests
sp-apache2/tests/init.pp
root@nodep1:/home/vagrant/nov19# ls
helloworld.pp  install_apache2.pp  sp-apache2
root@nodep1:/home/vagrant/nov19# mv sp-apache2 apache2
root@nodep1:/home/vagrant/nov19# ls
apache2  helloworld.pp  install_apache2.pp
root@nodep1:/home/vagrant/nov19#


root@nodep1:/home/vagrant/nov19# cat apache2/manifests/init.pp
class apache2 {
  package{'apache2':
    ensure => present
  }
  service{'apache2':
    ensure => running
  }
}
root@nodep1:/home/vagrant/nov19# cat install_apache2.pp
include apache2
root@nodep1:/home/vagrant/nov19#

root@nodep1:/home/vagrant/nov19# cat apache2/manifests/init.pp
class apache2 {
  package{'apache2':
    ensure => present
  }
  service{'apache2':
    ensure => running
  }
}
root@nodep1:/home/vagrant/nov19# cat install_apache2.pp
include apache2
root@nodep1:/home/vagrant/nov19# puppet apply install_apache2.pp
Warning: Could not retrieve fact fqdn
Error: Could not find class apache2 for nodep1 on node nodep1
Error: Could not find class apache2 for nodep1 on node nodep1
root@nodep1:/home/vagrant/nov19# puppet apply --modulepath /home/vagrant/nov19 install_apache2.pp
Warning: Could not retrieve fact fqdn
Notice: Compiled catalog for nodep1 in environment production in 0.26 seconds
Notice: Finished catalog run in 0.22 seconds
root@nodep1:/home/vagrant/nov19#

#Ordering
->
require
before

### Managing static files

root@nodep1:/home/vagrant/nov19/apache2# mkdir files
root@nodep1:/home/vagrant/nov19/apache2# cd files/
root@nodep1:/home/vagrant/nov19/apache2/files# ls
root@nodep1:/home/vagrant/nov19/apache2/files# cp /etc/apache2/ports.conf .
root@nodep1:/home/vagrant/nov19/apache2/files# vi ports.conf
root@nodep1:/home/vagrant/nov19/apache2/files# grep Listen ports.conf
Listen 9090
        Listen 443
        Listen 443
root@nodep1:/home/vagrant/nov19/apache2/files#

### Subscribe notify
notify
subscript
~>

#### Bring up puppet 
on Vagrantfile 
56 to 78 uncomment, save the file and then execute vagrant up

###### Certificate signing
from nodep1 execute
  puppet agent -t
from puppet execute
  puppet cert list
  puppet cert sign nodep1
  
#### Force certificate recreation
from puppet 
  puppet cert clean "nodep1"
from nodep1
  rm -rf /var/lib/puppet/ssl
  puppet agent -t
from puppet
  puppet cert sign "nodep1"
from nodep1
  puppet agent -t
 

### Node definitions

root@puppet:/etc/puppet/manifests# cat site.pp 
import 'nodep1.pp'
import 'default.pp'
root@puppet:/etc/puppet/manifests# cat nodep1.pp

node nodep1 {
  notify{'Specific to nodep1':}
}
root@puppet:/etc/puppet/manifests# cat default.pp

node default{
  notify{'Welcome':}
}
root@puppet:/etc/puppet/manifests#


### module on the puppetmaster

root@puppet:/etc/puppet/modules# #scp -r vagrant@nodep1:~vagrant/nov19/apache2 .
root@puppet:/etc/puppet/modules# ls
apache2
root@puppet:/etc/puppet/modules# cd ../manifests/
root@puppet:/etc/puppet/manifests# cat nodep1.pp

node nodep1 {
  notify{'Specific to nodep1':}
  include apache2
}
root@puppet:/etc/puppet/manifests#


### Working with variables
### Create a module for vars and include it

root@puppet  /etc/puppet/modules
$#puppet module generate sp-vars              
root@puppet  /etc/puppet/modules
$#mv sp-vars vars                             
root@puppet  /etc/puppet/modules
$ls
apache2  vars

root@puppet  /etc/puppet/modules
$cat vars/manifests/init.pp
class vars {
  $local_var = 8070
  notify{"value is $local_var":}
}

root@puppet  /etc/puppet/modules
$cat ../manifests/nodep1.pp

node nodep1 {
  notify{'Specific to nodep1':}
  include apache2
  include vars
}

### Facts and custom facts
root@puppet  /etc/puppet/modules
$cat vars/manifests/init.pp
class vars {
  $local_var = 8070
  $ipaddress = 'some other value'
  notify{"value is $local_var":}
  notify{"ipadd is $::ipaddress":}
  notify{"Custom fact boxrole $::boxrole":}
}

root@nodep1  /etc/facter/facts.d
$#create if not exists

root@nodep1  /etc/facter/facts.d
$cat myfacts.txt
boxrole=webserver


## If statements and parameterized classes
root@puppet  /etc/puppet/modules
$cat ../manifests/nodep1.pp

node nodep1 {
  notify{'Specific to nodep1':}
  include apache2
  #include vars
  class{'vars':
        uservariable => "my own value"
  }
}

root@puppet  /etc/puppet/modules
$cat vars/manifests/init.pp
class vars($uservariable) {
  $local_var = 8070
  $ipaddress = 'some other value'
  notify{"value is $local_var":}
  notify{"ipadd is $::ipaddress":}
  notify{"Custom fact boxrole $::boxrole":}

  if $::boxrole == 'webserver' {
    notify{"All things related to webserver":}
  } else {
    notify{"All things related to dbserver":}
  }
  if $::osfamily == 'Debian' {
     notify{'some installation with Debian':}
  } else {
     notify{'installing httpd':}
     package{'httpd':}
  }
  notify{"user passed $uservariable":}
}

######## TEMPLATES ###########

root@puppet  /etc/puppet/modules
$cat vars/templates/f1.txt.erb
username=<%= @uservariable %>

root@puppet  /etc/puppet/modules
$cat ../manifests/nodep1.pp

node nodep1 {
  notify{'Specific to nodep1':}
  include apache2
  #include vars
  class{'vars':
        uservariable => "scott"
  }
}
root@puppet  /etc/puppet/modules
$cat vars/manifests/init.pp
class vars($uservariable) {
  file {'/tmp/f1.txt':
    content => template('vars/f1.txt.erb')
  }
}

#### APACHE2 exercise
Templates
1. Create a template
    1.1 create folder "templates" within apache
    1.2 place ports.conf as ports.conf.erb
    1.3 replace port with $apache_port
2. use the template
    2.1 init.pp of apache2 module
        use template
    2.2 make apache2 as a parameterized class
    
3. call apache2 module and pass apache_port

##### SOLUTION ##################




root@puppet  /etc/puppet
$cat manifests/nodep1.pp

node nodep1 {
  notify{'Specific to nodep1':}
  class {'apache2': apache_port => 9090}
  class{'vars':
        uservariable => "scott"
  }
}

root@puppet  /etc/puppet
$grep Listen modules/apache2/templates/ports.conf.erb
Listen <%= @apache_port %>
        Listen 443
        Listen 443

root@puppet  /etc/puppet
$cat modules/apache2/manifests/init.pp
class apache2($apache_port) {

  notify{'Executing apache2 class':}

  package{'apache2':}

  file{'/etc/apache2/ports.conf':
    content => template('apache2/ports.conf.erb'),
    ensure => present,
  }

  service{'apache2':
    ensure => running,
  }


  Package['apache2'] -> File['/etc/apache2/ports.conf']
  Package['apache2'] -> Service['apache2']
  File['/etc/apache2/ports.conf'] ~> Service['apache2']
}



##### Environments
root@puppet  /etc/puppet
edit puppet.conf and add the below config
environmentpath = $confdir/environments

## Create environments folder
root@puppet  /etc/puppet/environments
$tree nov20dev nov20prod
nov20dev
├── manifests
│   └── app.pp
└── modules
nov20prod
├── manifests
│   └── app.pp
└── modules

4 directories, 2 files

root@puppet  /etc/puppet/environments
$cp /etc/puppet/manifests/nodep1.pp nov20dev/manifests/app.pp

root@puppet  /etc/puppet/environments
$cp /etc/puppet/manifests/nodep1.pp nov20prod/manifests/app.pp

# turn off site.pp
# commet every line of site.pp or make site.pp empty
# Restart puppet master

root@puppet  /etc/puppet/environments
$service puppetmaster restart
 * Restarting puppet master                                                              [ OK ]

# Trigger the agent run
root@nodep1  /etc/apache2
$puppet agent -t --environment nov20dev








